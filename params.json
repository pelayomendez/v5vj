{"body":"![v5vj](http://www.welovecode.net/demos/v5vjdemo/examples/v5vj0005.png)\r\n\r\n**v5vj.js :: v0.0.5**\r\nvideo canvas vj stream script\r\nwelovecode dic'12\r\n\r\n***\r\n\r\n**What is it?**\r\n\r\nFirst of all is a simple script to load and manipulate videos dynamically on a canvas element.\r\nThe original idea was to use it for developing vj web software or interactive video websites in HTML5.\r\n\r\nNoe the project also includes v5jserver, a node.js based socket server. \r\nIt make use of node-webkit to run as native app on Linux/Mac/Windows.\r\n<a href='https://github.com/rogerwang/node-webkit'>node-webkit</a> is an app runtime based on Chromium and node.js. \r\nYou can write native apps in HTML and Javascript with node-webkit. It also lets you to call Node.js modules directly \r\nfrom DOM and enables a new way of writing native applications with all Web technologies.\r\n\r\nSo... by running the test web app here: \r\nhttp://www.welovecode.net/demos/v5vjdemo/examples/v5basetest.html\r\n\r\n.. and downloading the and running the server n your computer you´ll be able to stream the canvas content, \r\n(or part of it) to many diferent devices/computers on your local network. \r\n\r\nPlease note this is a concept test release in really alpha stage.\r\n\r\n**What for?**\r\n\r\n- Video wall multi-device installations.\r\n- Multi-vj live sessions\r\n- Visual interaction in local network of visuals with remote controll\r\n- ...\r\n\r\n**What´s next?**\r\n\r\n- Improve the script and test it in a real project.\r\n- Extend base test to create a really usefull vj software.\r\n- Extend v5vjserver client to be more flexible and configurable.\r\n\r\n**Supported video formats:**\r\n.MP4, .WEBM\r\n\r\n**Supported browsers:**\r\n\r\n* App:\r\nFirefox (OSX), Chrome (OSX)\r\n\r\n* Client:\r\nShould run in any modern browser","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"video/canvas vj stream script","name":"V5vj","google":""}